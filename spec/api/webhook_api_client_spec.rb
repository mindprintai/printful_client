=begin
#API Documentation | Printful

## About the Printful API  The Printful API is a RESTful API, that uses an HTTP protocol for communication. HTTP GET, POST, PUT and DELETE methods are used to access the API resources.  ## Requests and responses  ### Request endpoint All API requests have to be sent to this URL: ``` https://api.printful.com/ ``` If you are using a proxy, make sure that all requests have host header set to **api.printful.com**.  ### Request parameters Some mandatory parameters (like object identifiers) must be included in the request URL path ``` GET /orders/123 ``` Additional parameters can be passed as GET variables: ``` GET /orders?offset=10&limit=5 ``` For POST and PUT requests, a more complex data structure can be passed as JSON encoded data in the request body: ``` POST /orders  {\"recipient\":{...},\"items\":[...]} ```  ### Response body The response body is always a JSON object that contains a response status code (identical to the HTTP status code) and the result of the action. If the status code is 200, then the action was successful. ``` {    \"code\": 200, //Response status code    \"result\":{       //API method return data    //...    } } ```  Sometimes the response includes paging information to allow to browse larger result sets by adding offset and limit GET parameters to the request URL. ``` {    \"code\": 200, //Response status code    \"result\":[     {        //Item 11     },     {        //Item 12     }    ]    \"paging\": {       \"total\": 12,  //Total items available       \"offset\": 10, //Items skipped from the beginning       \"limit\": 20   //Number of items per page    } } ```  ## Error response If the API call is not successful, then the response code is not in the 2xx range and the `result` attribute contains an error description. ``` {     \"code\": 404,     \"result\": \"Not Found\",     \"error\": {         \"reason\": \"NotFound\",         \"message\": \"Not Found\"     } } ```  In general, response codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, etc.), and codes in the 5xx range indicate an error with Printful's servers.  ### Timestamps All timestamps from the API are returned as integers in UNIX timestamp format.  ### Rate Limits Printful API has a general rate limit of 120 API calls per minute. Additionally, endpoints that perform resource intensive operations (such as mockup generator) have a lower allowed request limit.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

The version of the OpenAPI document: 1.0
Contact: devsupport@printful.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Printful::WebhookAPIClient
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WebhookAPIClient' do
  before do
    # run before each test
    @api_instance = Printful::WebhookAPIClient.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WebhookAPIClient' do
    it 'should create an instance of WebhookAPIClient' do
      expect(@api_instance).to be_instance_of(Printful::WebhookAPIClient)
    end
  end

  # unit tests for create_webhook
  # Set up webhook configuration
  # Use this endpoint to enable a webhook URL for a store and select webhook event types that will be sent to this URL.   Note that only one webhook URL can be active for a store, so calling this method disables all existing webhook configuration.   Setting up the [Stock updated](#operation/stockUpdated) webhook requires passing IDs for products that need to be monitored for changes. Stock update webhook will only include information for specified products. These product IDs need to be set up using the params property.
  # @param create_webhook_request POST request body
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_pf_store_id Use this to specify which store you want to use (required only for account level token)
  # @return [GetWebhooks200Response]
  describe 'create_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for disable_webhook
  # Disable webhook support
  # Removes the webhook URL and all event types from the store.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_pf_store_id Use this to specify which store you want to use (required only for account level token)
  # @return [GetWebhooks200Response]
  describe 'disable_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_webhooks
  # Get webhook configuration
  # Returns configured webhook URL and list of webhook event types enabled for the store
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_pf_store_id Use this to specify which store you want to use (required only for account level token)
  # @return [GetWebhooks200Response]
  describe 'get_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
