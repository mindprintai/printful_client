=begin
#API Documentation | Printful

## About the Printful API  The Printful API is a RESTful API, that uses an HTTP protocol for communication. HTTP GET, POST, PUT and DELETE methods are used to access the API resources.  ## Requests and responses  ### Request endpoint All API requests have to be sent to this URL: ``` https://api.printful.com/ ``` If you are using a proxy, make sure that all requests have host header set to **api.printful.com**.  ### Request parameters Some mandatory parameters (like object identifiers) must be included in the request URL path ``` GET /orders/123 ``` Additional parameters can be passed as GET variables: ``` GET /orders?offset=10&limit=5 ``` For POST and PUT requests, a more complex data structure can be passed as JSON encoded data in the request body: ``` POST /orders  {\"recipient\":{...},\"items\":[...]} ```  ### Response body The response body is always a JSON object that contains a response status code (identical to the HTTP status code) and the result of the action. If the status code is 200, then the action was successful. ``` {    \"code\": 200, //Response status code    \"result\":{       //API method return data    //...    } } ```  Sometimes the response includes paging information to allow to browse larger result sets by adding offset and limit GET parameters to the request URL. ``` {    \"code\": 200, //Response status code    \"result\":[     {        //Item 11     },     {        //Item 12     }    ]    \"paging\": {       \"total\": 12,  //Total items available       \"offset\": 10, //Items skipped from the beginning       \"limit\": 20   //Number of items per page    } } ```  ## Error response If the API call is not successful, then the response code is not in the 2xx range and the `result` attribute contains an error description. ``` {     \"code\": 404,     \"result\": \"Not Found\",     \"error\": {         \"reason\": \"NotFound\",         \"message\": \"Not Found\"     } } ```  In general, response codes in the 4xx range indicate an error that resulted from the provided information (e.g. a required parameter was missing, etc.), and codes in the 5xx range indicate an error with Printful's servers.  ### Timestamps All timestamps from the API are returned as integers in UNIX timestamp format.  ### Rate Limits Printful API has a general rate limit of 120 API calls per minute. Additionally, endpoints that perform resource intensive operations (such as mockup generator) have a lower allowed request limit.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

The version of the OpenAPI document: 1.0
Contact: devsupport@printful.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Printful::ReportsAPIClient
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReportsAPIClient' do
  before do
    # run before each test
    @api_instance = Printful::ReportsAPIClient.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReportsAPIClient' do
    it 'should create an instance of ReportsAPIClient' do
      expect(@api_instance).to be_instance_of(Printful::ReportsAPIClient)
    end
  end

  # unit tests for get_statistics
  # Get statistics
  # Returns statistics for specified report types.  You need to specify the report types you want to retrieve in the &#x60;report_types&#x60; query parameter as a comma-separated list, e.g. &#x60;report_types&#x3D;sales_and_costs,profit&#x60;.  **Note**: You cannot get statistics for a period longer than 6 months.  #### Example  To get statistics in the default currency of a store for &#x60;sales_and_costs&#x60; and &#x60;profit&#x60; reports for August 2022, you can use the following URL: https://api.printful.com/reports/statistics?report_types&#x3D;sales_and_costs,profit&amp;date_from&#x3D;2022-08-01&amp;date_to&#x3D;2022-08-31.  ### Report types  Currently, the following report types are available:  | Report type                | Description                                              | |----------------------------|----------------------------------------------------------| | &#x60;sales_and_costs&#x60;          | Detailed information on sales and costs grouped by date. | | &#x60;sales_and_costs_summary&#x60;  | Short information on sales and costs grouped by date.    | | &#x60;printful_costs&#x60;           | Amount paid to Printful for fulfillment and shipping.    | | &#x60;profit&#x60;                   | Profit in the specified period.                          | | &#x60;total_paid_orders&#x60;        | The number of paid orders in the specified period.       | | &#x60;costs_by_amount&#x60;          | Information on costs by amount grouped by date.          | | &#x60;costs_by_product&#x60;         | Information on costs grouped by product.                 | | &#x60;costs_by_variant&#x60;         | Information on costs grouped by variant.                 | | &#x60;average_fulfillment_time&#x60; | Average time it took Printful to fulfill Your orders.    |  The response structure for the specific reports is documented in the response schema (&#x60;result.store_statistics.[reportName]&#x60;). 
  # @param date_from The beginning of the period to get the statistics from (date in &#x60;Y-m-d&#x60; format).
  # @param date_to The end of the period to get the statistics from (date in &#x60;Y-m-d&#x60; format).
  # @param report_types A comma-separated list of report types to be retrieved.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_pf_store_id Use this to specify which store you want to use (required only for account level token)
  # @option opts [String] :currency The currency (3-letter code) to return the statistics in. You can also specify &#x60;display_currency&#x60; as the value to get the statistics in the account&#39;s display currency. The store currency will be used by default.
  # @return [GetStatistics200Response]
  describe 'get_statistics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
